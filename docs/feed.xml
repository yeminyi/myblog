<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-19T17:12:46+10:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Amy’s blog</title><subtitle>I am Amy Ye. Web Developer.</subtitle><author><name>GitHub Yeminyi</name></author><entry><title type="html">Deployment for Angular + Asp.net core with Sqlite</title><link href="http://localhost:4000/azure/2020/09/15/azure-deployment.html" rel="alternate" type="text/html" title="Deployment for Angular + Asp.net core with Sqlite" /><published>2020-09-15T00:00:00+10:00</published><updated>2020-09-15T00:00:00+10:00</updated><id>http://localhost:4000/azure/2020/09/15/azure-deployment</id><content type="html" xml:base="http://localhost:4000/azure/2020/09/15/azure-deployment.html">&lt;h2 id=&quot;1build-the-project&quot;&gt;1.Build the project&lt;/h2&gt;
&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng build&lt;/code&gt; to build the client project. The build artifacts will be stored in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dist/&lt;/code&gt; directory. Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--prod&lt;/code&gt; flag for a production build.&lt;/p&gt;

&lt;h2 id=&quot;2create-the-apps-on-azure&quot;&gt;2.Create the apps on Azure.&lt;/h2&gt;
&lt;p&gt;Deploy the dist folder to the web app. Make sure put the web.config file under the&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wwwroot/&lt;/code&gt; as well. Angular on azure need the web.config for routing or read json file(local run ng serve is different with using IIS,need to add web.config ).By the way, WebApp windows environment need add the node.js version app settings.&lt;/p&gt;

&lt;h2 id=&quot;3deploy-to-azure&quot;&gt;3.Deploy to Azure&lt;/h2&gt;

&lt;h3 id=&quot;1-create-a-release-package&quot;&gt;1) Create a Release Package&lt;/h3&gt;

&lt;p&gt;Open your terminal and make sure you’re in the right folder.&lt;/p&gt;

&lt;p&gt;Run the following command to create a release package in a sub folder called publish:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet publish -c Release -o ./publish&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-copy-database-to-the-new-folder&quot;&gt;2) Copy database to the new folder&lt;/h3&gt;
&lt;p&gt;Copy-Paste your database, for example ‘yourDb.db’, into the newly created ‘publish’ folder.&lt;/p&gt;

&lt;h3 id=&quot;3publish-to-azure&quot;&gt;3)Publish to Azure&lt;/h3&gt;
&lt;p&gt;There are few ways to publish to Azure.Choose anyone if you like.
I always use Visual Studio Code and have the Azure App Service extension.&lt;/p&gt;

&lt;h3 id=&quot;4-set-the-connection-string&quot;&gt;4) Set the Connection String&lt;/h3&gt;
&lt;p&gt;Once the app has been deployed to Azure, you set your connection string in the Azure App Service.&lt;/p&gt;

&lt;p&gt;You can find the setting under  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_Settings -&amp;gt; Configuration -&amp;gt; Connection strings.&lt;/code&gt;	There you create a new connection string&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	[
		{
		&quot;name&quot;: &quot;ConnectionStrings&quot;,
		&quot;value&quot;: &quot;{ \&quot;DefaultConnection\&quot;: \&quot;Data Source=yourDb.db;\&quot; }&quot;,
		&quot;type&quot;: &quot;Custom&quot;,
		&quot;slotSetting&quot;: true
		}
	]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-set-the-application-settings&quot;&gt;5) Set the Application settings&lt;/h3&gt;

&lt;p&gt;You can find the setting under _Settings -&amp;gt; Configuration -&amp;gt; Applications Settings&lt;/p&gt;

&lt;p&gt;1&amp;gt; Adding the settings to web apps for your related API address.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		[
			 {
				&quot;name&quot;: &quot;APIAddress&quot;,
				&quot;value&quot;:&quot;https://the related app address&quot;,
				&quot;slotSetting&quot;: true
			 }
		]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2&amp;gt; Adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASPNETCORE_DETAILEDERRORS = true&lt;/code&gt; to show the errors.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		[
			 {
				&quot;name&quot;: &quot;ASPNETCORE_DETAILEDERRORS&quot;,
				&quot;value&quot;: &quot;true&quot;,
				&quot;slotSetting&quot;: true
			 }
		]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3&amp;gt; Adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASPNETCORE_ENVIRONMENT = Development&lt;/code&gt;. Restart the WebApp and then check to see if that works.&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="azure" /><category term="azure" /><category term="sqlite" /><category term="angular" /><category term="deploy" /><summary type="html">1.Build the project Run ng build to build the client project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.</summary></entry><entry><title type="html">How to create and deploy express web app on azure in few steps</title><link href="http://localhost:4000/azure/2020/08/12/create-deploy-express-web-app-on-azure-in-few-steps.html" rel="alternate" type="text/html" title="How to create and deploy express web app on azure in few steps" /><published>2020-08-12T00:00:00+10:00</published><updated>2020-08-12T00:00:00+10:00</updated><id>http://localhost:4000/azure/2020/08/12/create-deploy-express-web-app-on-azure-in-few-steps</id><content type="html" xml:base="http://localhost:4000/azure/2020/08/12/create-deploy-express-web-app-on-azure-in-few-steps.html">&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;
&lt;p&gt;You can create a new simple(nodejs + express) app and deploy to azure:&lt;/p&gt;

&lt;h3 id=&quot;step-1&quot;&gt;Step 1&lt;/h3&gt;
&lt;p&gt;install express
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install express-generator -g&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;p&gt;create an express sample application:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;express newappname&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3&quot;&gt;Step 3&lt;/h3&gt;

&lt;p&gt;cd newappname
   change directory:
     &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt; cd newapp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;install dependencies:
     &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt; npm install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;run the app locally:
     &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt; SET DEBUG=newapp:* &amp;amp; npm start&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;step-4&quot;&gt;Step 4&lt;/h3&gt;
&lt;p&gt;git init &amp;amp;  Azure deployment center - CI/CD 
   choose local git or github&lt;/p&gt;

&lt;h3 id=&quot;step-5&quot;&gt;Step 5&lt;/h3&gt;
&lt;p&gt;in vs code - azure app service
   deploy to related app&lt;/p&gt;

&lt;h2 id=&quot;here-are-reference-links&quot;&gt;Here are reference links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?pivots=platform-windows&quot;&gt;https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?pivots=platform-windows&lt;/a&gt;
  &lt;a href=&quot;https://thewebspark.com/2018/04/18/creating-and-deploying-express-web-app-on-azure-in-few-steps/&quot;&gt;https://thewebspark.com/2018/04/18/creating-and-deploying-express-web-app-on-azure-in-few-steps/&lt;/a&gt;&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="azure" /><category term="azure" /><category term="express" /><category term="nodejs" /><summary type="html">Steps You can create a new simple(nodejs + express) app and deploy to azure:</summary></entry><entry><title type="html">Angular CLI useful commands</title><link href="http://localhost:4000/angular/2019/10/19/angular-cli-useful-things.html" rel="alternate" type="text/html" title="Angular CLI useful commands" /><published>2019-10-19T00:00:00+11:00</published><updated>2019-10-19T00:00:00+11:00</updated><id>http://localhost:4000/angular/2019/10/19/angular-cli-useful-things</id><content type="html" xml:base="http://localhost:4000/angular/2019/10/19/angular-cli-useful-things.html">&lt;h2 id=&quot;angular-cli&quot;&gt;Angular CLI&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://cli.angular.io/&quot;&gt;https://cli.angular.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lists available commands and their short descriptions.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng -h&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-the-cli&quot;&gt;Installing the CLI&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install -g @angular/cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng -v&lt;/code&gt; check the version&lt;/p&gt;

&lt;p&gt;you can create a new Angular project with the following CLI command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng new my-angular-app&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;serve-an-application&quot;&gt;Serve an Application&lt;/h3&gt;

&lt;p&gt;With the CLI we can also easily serve our application using a local web-server.&lt;/p&gt;

&lt;p&gt;You can then cd into your new project and run your application:&lt;/p&gt;

&lt;p&gt;cd my-angular-app&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ng serve &amp;lt;project&amp;gt; [options]
ng s &amp;lt;project&amp;gt; [options]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng serve&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng serve -o&lt;/code&gt; (open browser)&lt;/p&gt;

&lt;h3 id=&quot;generation&quot;&gt;Generation&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng generate --help&lt;/code&gt; shorten is  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g -h&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;component&quot;&gt;Component&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng generate component my-component&lt;/code&gt;&lt;br /&gt;
shorten as below&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g c my-component&lt;/code&gt;// Creates MyComponent&lt;br /&gt;
By default all generated files go in into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src\app\my-component&lt;/code&gt;, a folder called my-component is created for us.&lt;/p&gt;

&lt;h4 id=&quot;the-other-scaffolds&quot;&gt;The other Scaffolds&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Features&lt;/th&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Shorten&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;directive&lt;/td&gt;
      &lt;td&gt;ng g directive my-new-directive&lt;/td&gt;
      &lt;td&gt;ng g d my-new-directive&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pipe&lt;/td&gt;
      &lt;td&gt;ng g pipe my-new-pipe&lt;/td&gt;
      &lt;td&gt;ng g p my-new-pipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;service&lt;/td&gt;
      &lt;td&gt;ng g service my-new-service&lt;/td&gt;
      &lt;td&gt;ng g s my-new-service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;ng g class my-new-class&lt;/td&gt;
      &lt;td&gt;ng g cl my-new-class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;interface&lt;/td&gt;
      &lt;td&gt;ng g interface my-new-interface&lt;/td&gt;
      &lt;td&gt;ng g i my-new-interface&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;enum&lt;/td&gt;
      &lt;td&gt;ng g enum my-new-enum&lt;/td&gt;
      &lt;td&gt;ng g e my-new-enum&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;module&lt;/td&gt;
      &lt;td&gt;ng g module my-module&lt;/td&gt;
      &lt;td&gt;ng g m my-module&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;By default all generated files go in into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src\app&lt;/code&gt;, no folder is created.&lt;/p&gt;

&lt;h4 id=&quot;routing&quot;&gt; Routing&lt;/h4&gt;
&lt;p&gt;When creating a new project, simply add the – routing flag and the CLI will generate a routing module for your project in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/app/app-routing.module.ts&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng new my-project --routing&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Later on, when you’re developing modules for your application, you can also generate separate routing modules, which is useful when you want to avoid cluttering the root app routing module. Once again, you use the same – routing flag when generating modules.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng generate module my-module --routing&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;styling-preprocessors&quot;&gt;Styling preprocessors&lt;/h4&gt;
&lt;p&gt;If you’d like to use a different preprocessor, simply replace scss with less or styl.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng new my-project --style=scss&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;dry-runs&quot;&gt;Dry runs&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g c my-test-component --dry-run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you’re a fan of aliases you can also use the alias for this flag, -d.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g c my-test-component -d&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;skip-tests&quot;&gt;Skip tests&lt;/h4&gt;
&lt;p&gt;When generating schematics using the generate command, you can do this using the  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--skipTests true&lt;/code&gt; flag:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;new version cli change to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--skipTests true&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;div style=&quot;color: red;&quot;&gt;  CAN'T USE `--spec=false` ANYMORE &lt;/div&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g c my-testless-component --spec=false&lt;/code&gt;&lt;/p&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;div style=&quot;color: green;&quot;&gt;  SHOULD BE &lt;/div&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng g c my-testless-component --skipTests true&lt;/code&gt;&lt;/p&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;You can also do this when creating your application with the new command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng new my-testless-application --skip-tests&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng new my-testless-application -S&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;some-more-options&quot;&gt;Some more options&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--flat: boolean, default false, generate component files in src/app instead of src/app/site-header
--inline-template: boolean, default false, use an inline template instead of a separate HTML file
--inline-style: boolean, default false, use inline styles instead of a separate CSS file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;examples&quot;&gt;Examples&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ng generate module myModule --routing --dry-run

ng g c mycomponent --flat --skipTests true --dry-run

ng g c mycomponent --flat --skipTests true

ng g s shared/open-id-connect --skipTests true --dry-run 

ng g c foldername/mycomponent --flat --skipTests true --inline-style --inline-template --dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Simply add your search term using the doc command and the CLI will automatically open a new browser window with your search term specified in the documentation.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng doc animations&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;build&quot;&gt;Build&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--prod=true|false	&lt;/code&gt;
Shorthand for “–configuration=production”. When true, sets the build configuration to the production target. By default, the production target is set up in the workspace configuration such that all builds make use of bundling, limited tree-shaking, and also limited dead code elimination.&lt;/p&gt;

&lt;p&gt;Running with&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--prod&lt;/code&gt; changes a few things:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The bundles now have random strings appended to them to enable cache
busting.This ensures that a browser doesn’t try to load up
previously cached versions of the files and instead load the new
ones from the server.&lt;/li&gt;
  &lt;li&gt;The file sizes are much smaller. The files have been processed
  through a minifier and uglifier.&lt;/li&gt;
  &lt;li&gt;There is a much small .gz file, this is a compressed version of the
    equivalent JavaScript file.Browsers will automatically try to
    download the .gz version of files if they are present.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;test&quot;&gt;Test&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng test&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng update @angular/cli @angular/core&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ng update --all&lt;/code&gt; //Whether to update all packages in package.json.&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="angular" /><category term="angular" /><category term="cli" /><summary type="html">Angular CLI https://cli.angular.io/</summary></entry><entry><title type="html">Nodepad++ tips</title><link href="http://localhost:4000/tools/2019/05/19/nodepad-tips.html" rel="alternate" type="text/html" title="Nodepad++ tips" /><published>2019-05-19T00:00:00+10:00</published><updated>2019-05-19T00:00:00+10:00</updated><id>http://localhost:4000/tools/2019/05/19/nodepad-tips</id><content type="html" xml:base="http://localhost:4000/tools/2019/05/19/nodepad-tips.html">&lt;p&gt;New line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;\n&quot;&lt;/code&gt;(mostly) or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;\r&quot;&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;\r\n&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scenario&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;1、in a long SQL query&lt;br /&gt;
2、edit the same thing for the multiple lines in the markdown&lt;/p&gt;

&lt;p&gt;Eg : in the Nodepad – edit sth at the last of the line.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xxx 
xxx  
xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Change to ：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xxx,xxx,xxx,&lt;/code&gt; or&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xxx,&amp;lt;Br&amp;gt;  
xxx,&amp;lt;Br&amp;gt; 
xxx,&amp;lt;Br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Search &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;\r\n&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Replace the last of the line ,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;\r ,&amp;lt;Br&amp;gt;&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Mutiple edit in nodepad++ &lt;br /&gt;
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + mouse&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift + alt + mouse(direction key)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shift + ⭾ Tab&lt;/code&gt;: (selection of one or more full lines) Remove tabulation or space&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="tools" /><summary type="html">New line &quot;\n&quot;(mostly) or &quot;\r&quot; or &quot;\r\n&quot;</summary></entry><entry><title type="html">An exhibit of Markdown</title><link href="http://localhost:4000/markdown/2018/12/05/an-exhibit-of-markdown.html" rel="alternate" type="text/html" title="An exhibit of Markdown" /><published>2018-12-05T00:00:00+11:00</published><updated>2018-12-05T00:00:00+11:00</updated><id>http://localhost:4000/markdown/2018/12/05/an-exhibit-of-markdown</id><content type="html" xml:base="http://localhost:4000/markdown/2018/12/05/an-exhibit-of-markdown.html">&lt;p&gt;This note demonstrates some of what &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is capable of doing.&lt;/p&gt;

&lt;h2 id=&quot;an-exhibit-of-markdown&quot;&gt;An exhibit of Markdown&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: Feel free to play with this page. Unlike regular notes, this doesn’t automatically save itself.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic formatting&lt;/h2&gt;

&lt;p&gt;Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.&lt;/p&gt;

&lt;p&gt;Paragraphs must be separated by a blank line. Basic formatting of &lt;em&gt;italics&lt;/em&gt; and &lt;strong&gt;bold&lt;/strong&gt; is supported. This &lt;em&gt;can be &lt;strong&gt;nested&lt;/strong&gt; like&lt;/em&gt; so.&lt;/p&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;h3 id=&quot;ordered-list&quot;&gt;Ordered list&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;A second item&lt;/li&gt;
  &lt;li&gt;Number 3&lt;/li&gt;
  &lt;li&gt;Ⅳ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note: the fourth item uses the Unicode character for &lt;a href=&quot;http://www.fileformat.info/info/unicode/char/2163/index.htm&quot;&gt;Roman numeral four&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;unordered-list&quot;&gt;Unordered list&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;An item&lt;/li&gt;
  &lt;li&gt;Another item&lt;/li&gt;
  &lt;li&gt;Yet another item&lt;/li&gt;
  &lt;li&gt;And there’s more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;paragraph-modifiers&quot;&gt;Paragraph modifiers&lt;/h2&gt;

&lt;h3 id=&quot;code-block&quot;&gt;Code block&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Code blocks are very useful for developers and other people who look at code or other things that are written in plain text. As you can see, it uses a fixed-width font.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inline code&lt;/code&gt; to add code into other things.&lt;/p&gt;

&lt;h3 id=&quot;quote&quot;&gt;Quote&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;p&gt;There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character.&lt;/p&gt;

&lt;h3 id=&quot;headings-can-also-contain-formatting&quot;&gt;Headings &lt;em&gt;can&lt;/em&gt; also contain &lt;strong&gt;formatting&lt;/strong&gt;&lt;/h3&gt;

&lt;h3 id=&quot;they-can-even-contain-inline-code&quot;&gt;They can even contain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inline code&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Of course, demonstrating what headings look like messes up the structure of the page.&lt;/p&gt;

&lt;p&gt;I don’t recommend using more than three or four levels of headings here, because, when you’re smallest heading isn’t too small, and you’re largest heading isn’t too big, and you want each size up to look noticeably larger and more important, there there are only so many sizes that you can use.&lt;/p&gt;

&lt;h2 id=&quot;urls&quot;&gt;URLs&lt;/h2&gt;

&lt;p&gt;URLs can be made in a handful of ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A named link to &lt;a href=&quot;http://www.markitdown.net/&quot;&gt;MarkItDown&lt;/a&gt;. The easiest way to do these is to select what you want to make a link and hit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+L&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Another named link to &lt;a href=&quot;http://www.markitdown.net/&quot;&gt;MarkItDown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sometimes you just want a URL like &lt;a href=&quot;http://www.markitdown.net/&quot;&gt;http://www.markitdown.net/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;horizontal-rule&quot;&gt;Horizontal rule&lt;/h2&gt;

&lt;p&gt;A horizontal rule is a line that goes across the middle of the page.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;It’s sometimes handy for breaking things up.&lt;/p&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;Markdown can also contain images. I’ll need to add something here sometime.&lt;/p&gt;

&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;

&lt;p&gt;There’s actually a lot more to Markdown than this. See the official &lt;a href=&quot;http://daringfireball.net/projects/markdown/basics&quot;&gt;introduction&lt;/a&gt; and &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;syntax&lt;/a&gt; for more information. However, be aware that this is not using the official implementation, and this might work subtly differently in some of the little things.&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="example" /><category term="markdown" /><summary type="html">This note demonstrates some of what Markdown is capable of doing.</summary></entry><entry><title type="html">Video example</title><link href="http://localhost:4000/markdown/2017/12/18/video-example.html" rel="alternate" type="text/html" title="Video example" /><published>2017-12-18T00:00:00+11:00</published><updated>2017-12-18T00:00:00+11:00</updated><id>http://localhost:4000/markdown/2017/12/18/video-example</id><content type="html" xml:base="http://localhost:4000/markdown/2017/12/18/video-example.html">&lt;h2 id=&quot;canon-in-d-pachelbels-canon---cello--piano-best-wedding-version&quot;&gt;Canon in D (Pachelbel’s Canon) - Cello &amp;amp; Piano [BEST WEDDING VERSION]&lt;/h2&gt;
&lt;p&gt;Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it &lt;em&gt;not&lt;/em&gt; at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!&lt;/p&gt;

&lt;iframe id=&quot;media-Ptk_1Dc2iPY&quot; class=&quot;media&quot; src=&quot;https://www.youtube.com/embed/Ptk_1Dc2iPY&quot; title=&quot;&quot; width=&quot;100%&quot; height=&quot;350&quot; style=&quot;max-width: 600px;outline: none&quot; allow=&quot;encrypted-media; picture-in-picture&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;gucci-hallucination--the-line-animation--gucci&quot;&gt;GUCCI HALLUCINATION / THE LINE ANIMATION / GUCCI&lt;/h2&gt;
&lt;p&gt;BACKGROUND /&lt;/p&gt;

&lt;p&gt;Gucci share their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.&lt;/p&gt;

&lt;p&gt;APPROACH /&lt;/p&gt;

&lt;p&gt;Our aim was to ground and accentuate the outlandish scenarios with ambient sound design. Neither proclaiming to be positive or negative, the sound conveys a sense of the uncanny and leaves the audience with nothing but their own interpretations. their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.&lt;/p&gt;

&lt;iframe id=&quot;media-263856289&quot; class=&quot;media&quot; src=&quot;https://player.vimeo.com/video/263856289&quot; title=&quot;&quot; width=&quot;100%&quot; height=&quot;350&quot; style=&quot;max-width: 600px;outline: none&quot; allow=&quot;encrypted-media; picture-in-picture&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;finneas-demos-how-he-builds-songs-for-billie-eilish&quot;&gt;FINNEAS Demos How He Builds Songs For Billie Eilish&lt;/h2&gt;
&lt;p&gt;Grammy Award-winning musician and producer FINNEAS sits down with Pitchfork and closely examines his creative process while working on some of the biggest hit songs of the past couple years. FINNEAS explores the sounds that brought upon 
some of his greatest musical breakthroughs in songs such as bad guy, bury a friend, ocean eyes, when the party’s over, I Lost a Friend, Used to This and much more.&lt;/p&gt;

&lt;iframe id=&quot;media-x7tgcev&quot; class=&quot;media&quot; src=&quot;https://www.dailymotion.com/embed/video/x7tgcev&quot; title=&quot;&quot; width=&quot;100%&quot; height=&quot;350&quot; style=&quot;max-width: 600px;outline: none&quot; allow=&quot;encrypted-media; picture-in-picture&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;this-is-the-poster-image&quot;&gt;This is the poster image&lt;/h2&gt;
&lt;p&gt;In modern browsers, adding a video to your page is as easy as adding an image. No longer do you need to deal with special plug-ins or require crazy markup, you can do it with a single element.&lt;/p&gt;
&lt;iframe id=&quot;media-devstories.webm&quot; class=&quot;media&quot; src=&quot;//www.html5rocks.com/en/tutorials/video/basics/devstories.webm&quot; title=&quot;&quot; width=&quot;100%&quot; height=&quot;350&quot; style=&quot;max-width: 600px;outline: none&quot; allow=&quot;encrypted-media; picture-in-picture&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="markdown" /><category term="example" /><category term="video" /><summary type="html">Canon in D (Pachelbel’s Canon) - Cello &amp;amp; Piano [BEST WEDDING VERSION] Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it not at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!</summary></entry><entry><title type="html">Table example</title><link href="http://localhost:4000/markdown/2017/12/15/table-example.html" rel="alternate" type="text/html" title="Table example" /><published>2017-12-15T00:00:00+11:00</published><updated>2017-12-15T00:00:00+11:00</updated><id>http://localhost:4000/markdown/2017/12/15/table-example</id><content type="html" xml:base="http://localhost:4000/markdown/2017/12/15/table-example.html">&lt;h2 id=&quot;table-example-as-below&quot;&gt;Table example as below&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;For now, these extended features are provided:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cells spanning multiple columns&lt;/li&gt;
  &lt;li&gt;Cells spanning multiple rows&lt;/li&gt;
  &lt;li&gt;Cells text align separately&lt;/li&gt;
  &lt;li&gt;Table header not required&lt;/li&gt;
  &lt;li&gt;Grouped table header rows or data rows&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rowspan-and-colspan&quot;&gt;Rowspan and Colspan&lt;/h3&gt;
&lt;p&gt;^^ in a cell indicates it should be merged with the cell above.&lt;br /&gt;
This feature is contributed by &lt;a href=&quot;https://github.com/pmccloghrylaing&quot;&gt;pmccloghrylaing&lt;/a&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Stage&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Direct Products&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;ATP Yields&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Glycolysis&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2 ATP                   |&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;^^&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2 NADH&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3–5 ATP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Pyruvaye oxidation&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2 NADH&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5 ATP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Citric acid cycle&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2 ATP           |&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;^^&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6 NADH&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;15 ATP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;^^&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2 FADH&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3 ATP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;30–32 ATP                         ||&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;[ Net ATP yields per hexose]&lt;/p&gt;

&lt;h3 id=&quot;multiline&quot;&gt;Multiline&lt;/h3&gt;
&lt;p&gt;A backslash at end to join cell contents with the following lines.&lt;br /&gt;
This feature is contributed by &lt;a href=&quot;https://github.com/Lucas-C&quot;&gt;Lucas-C&lt;/a&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;:     Easy Multiline     :||&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange  \&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange  \&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange  \&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;headerless&quot;&gt;Headerless&lt;/h3&gt;
&lt;p&gt;Table header can be eliminated.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;♜&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♝&lt;/td&gt;
      &lt;td&gt;♛&lt;/td&gt;
      &lt;td&gt;♚&lt;/td&gt;
      &lt;td&gt;♝&lt;/td&gt;
      &lt;td&gt;♞&lt;/td&gt;
      &lt;td&gt;♜&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♞&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♗&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♟&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♘&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
      &lt;td&gt;♙&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;♖&lt;/td&gt;
      &lt;td&gt;♘&lt;/td&gt;
      &lt;td&gt;♗&lt;/td&gt;
      &lt;td&gt;♕&lt;/td&gt;
      &lt;td&gt;♔&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;♖&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|:     Fruits &lt;span class=&quot;se&quot;&gt;\|\|&lt;/span&gt; Food           :|||
|:-------- |:-------- |:------------ |
| Apple    |: Apple  :|    Apple     &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
| Banana   |  Banana  |    Banana    &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
| Orange   |  Orange  |    Orange    |
|:   Rowspan is 5   :||:  How's it? :|
|^^   A. Peach       ||^^ 1. Fine    |
|^^   B. Orange      ||^^ 2. Bad  $I = &lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;nt &lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;ho R^{2} dV$     |
|^^   C. Banana      ||   It's OK! !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;example image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;my-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;text-alignment&quot;&gt;Text Alignment&lt;/h3&gt;
&lt;p&gt;Table cell can be set alignment separately.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;\:Fruits         |&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Food   :&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Fruits\::        |&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;: \:Fruits       :|&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;:       Food     :|&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:   Strawberry    :&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple  &amp;amp;  Banana |&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Peach        :|&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;: \:Fruits       :|&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;:       Food     :|&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Apple&lt;/td&gt;
      &lt;td&gt;Banana&lt;/td&gt;
      &lt;td&gt;Orange&lt;/td&gt;
      &lt;td&gt;:   Strawberry    :&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;:     Fruits || Food           :||&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;: Apple  :&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apple     \&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Banana    \&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Orange&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:   Rowspan is 5   :|&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:  How’s it? :&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^   A. Peach       |&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^ 1. Fine&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^   B. Orange      |&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^ 2. Bad  $I = \int \rho R^{2} dV$&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;^^   C. Banana      |&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;It’s OK! ![](http://www.unexpected-vortices.com/sw/rippledoc/example-image.jpg &quot;An exemplary image&quot;)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="markdown" /><category term="example" /><category term="table" /><summary type="html">Table example as below</summary></entry><entry><title type="html">Mermaid example</title><link href="http://localhost:4000/markdown/2017/12/08/mermaid-example.html" rel="alternate" type="text/html" title="Mermaid example" /><published>2017-12-08T00:00:00+11:00</published><updated>2017-12-08T00:00:00+11:00</updated><id>http://localhost:4000/markdown/2017/12/08/mermaid-example</id><content type="html" xml:base="http://localhost:4000/markdown/2017/12/08/mermaid-example.html">&lt;h3 id=&quot;1-pie-chart&quot;&gt;1. Pie chart&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoicGllIHRpdGxlIFBldHMgYWRvcHRlZCBieSB2b2x1bnRlZXJzXG5cIkRvZ3NcIiA6IDM4NlxuXCJDYXRzXCIgOiA4NVxuXCJSYXRzXCIgOiAzNSIsIm1lcm1haWQiOm51bGx9&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-sequence-diagram&quot;&gt;2. sequence diagram&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5BbGljZSAtPj4gQm9iOiBIZWxsbyBCb2IsIGhvdyBhcmUgeW91P1xuQm9iLS0-PkpvaG46IEhvdyBhYm91dCB5b3UgSm9obj9cbkJvYi0teCBBbGljZTogSSBhbSBnb29kIHRoYW5rcyFcbkJvYi14IEpvaG46IEkgYW0gZ29vZCB0aGFua3MhXG5Ob3RlIHJpZ2h0IG9mIEpvaG46IEJvYiB0aGlua3MgYSBsb25nPGJyLz5sb25nIHRpbWUsIHNvIGxvbmc8YnIvPnRoYXQgdGhlIHRleHQgZG9lczxici8-bm90IGZpdCBvbiBhIHJvdy5cbkJvYi0tPkFsaWNlOiBDaGVja2luZyB3aXRoIEpvaG4uLi5cbkFsaWNlLT5Kb2huOiBZZXMuLi4gSm9obiwgaG93IGFyZSB5b3U_IiwibWVybWFpZCI6bnVsbH0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoiZ3JhcGggVERcbkFbQ2hyaXN0bWFzXSAtLT58R2V0IG1vbmV5fCBCKEdvIHNob3BwaW5nKVxuQiAtLT4gQ3tMZXQgbWUgdGhpbmt9XG5DIC0tPnxPbmV8IERbTGFwdG9wXVxuQyAtLT58VHdvfCBFW2lQaG9uZV1cbkMgLS0-fFRocmVlfCBGW2ZhOmZhLWNhciBDYXJdIiwibWVybWFpZCI6bnVsbH0&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-class-diagram&quot;&gt;3. Class diagram&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoiY2xhc3NEaWFncmFtXG5BbmltYWwgPHwtLSBEdWNrXG5BbmltYWwgPHwtLSBGaXNoXG5BbmltYWwgPHwtLSBaZWJyYVxuQW5pbWFsIDogK2ludCBhZ2VcbkFuaW1hbCA6ICtTdHJpbmcgZ2VuZGVyXG5BbmltYWw6ICtpc01hbW1hbCgpXG5BbmltYWw6ICttYXRlKClcbmNsYXNzIER1Y2t7XG4rU3RyaW5nIGJlYWtDb2xvclxuK3N3aW0oKVxuK3F1YWNrKClcbn1cbmNsYXNzIEZpc2h7XG4taW50IHNpemVJbkZlZXRcbi1jYW5FYXQoKVxufVxuY2xhc3MgWmVicmF7XG4rYm9vbCBpc193aWxkXG4rcnVuKClcbn0iLCJtZXJtYWlkIjpudWxsfQ&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-state-diagram&quot;&gt;4. State diagram&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoic3RhdGVEaWFncmFtXG5bKl0gLS0-IFN0aWxsXG5TdGlsbCAtLT4gWypdU3RpbGwgLS0-IE1vdmluZ1xuTW92aW5nIC0tPiBTdGlsbFxuTW92aW5nIC0tPiBDcmFzaFxuQ3Jhc2ggLS0-IFsqXSIsIm1lcm1haWQiOm51bGx9&quot; /&gt;&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="markdown" /><category term="example" /><category term="mermaid" /><summary type="html">1. Pie chart</summary></entry><entry><title type="html">Plantuml example</title><link href="http://localhost:4000/markdown/2017/12/04/plantuml-example.html" rel="alternate" type="text/html" title="Plantuml example" /><published>2017-12-04T00:00:00+11:00</published><updated>2017-12-04T00:00:00+11:00</updated><id>http://localhost:4000/markdown/2017/12/04/plantuml-example</id><content type="html" xml:base="http://localhost:4000/markdown/2017/12/04/plantuml-example.html">&lt;h2 id=&quot;my-first-plantuml&quot;&gt;My First PlantUML&lt;/h2&gt;

&lt;h3 id=&quot;plantuml-block-1&quot;&gt;PlantUML Block-1&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;plantuml&quot; src=&quot;http://www.plantuml.com/plantuml/png/~h407374617274756d6c0a426f62202d3e20416c696365203a2068656c6c6f0a40656e64756d6c&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;plantuml-block-2&quot;&gt;PlantUML Block-2&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;plantuml&quot; src=&quot;http://www.plantuml.com/plantuml/png/~h407374617274756d6c0a426f62202d3e20416c696365203a2068656c6c6f20776f726c640a40656e64756d6c&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;plantuml-block-3&quot;&gt;PlantUML Block-3&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;plantuml&quot; src=&quot;http://www.plantuml.com/plantuml/png/~h407374617274756d6c0a282a29202d2d3e2022496e697469616c697a6174696f6e220a0a69662022536f6d65205465737422207468656e0a20202d2d3e5b747275655d2022536f6d65204163746976697479220a20202d2d3e2022416e6f74686572206163746976697479220a20202d72696768742d3e20282a290a656c73650a20202d3e5b66616c73655d2022536f6d657468696e6720656c7365220a20202d2d3e5b456e64696e672070726f636573735d20282a290a656e6469660a40656e64756d6c&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;plantuml-block-4&quot;&gt;PlantUML Block-4&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;plantuml&quot; src=&quot;http://www.plantuml.com/plantuml/png/~h407374617274756d6c0a736b696e706172616d2068616e647772697474656e20747275650a0a736b696e706172616d2075736563617365207b0a20204261636b67726f756e64436f6c6f72204461726b536561477265656e0a2020426f72646572436f6c6f72204461726b536c617465477261790a0a20204261636b67726f756e64436f6c6f723c3c204d61696e203e3e2059656c6c6f77477265656e0a2020426f72646572436f6c6f723c3c204d61696e203e3e2059656c6c6f77477265656e0a0a20204172726f77436f6c6f72204f6c6976650a20204163746f72426f72646572436f6c6f7220626c61636b0a20204163746f72466f6e744e616d6520436f75726965720a0a20204163746f724261636b67726f756e64436f6c6f723c3c2048756d616e203e3e20476f6c640a7d0a0a55736572203c3c2048756d616e203e3e0a3a4d61696e2044617461626173653a206173204d7953716c203c3c204170706c69636174696f6e203e3e0a28537461727429203c3c204f6e652053686f74203e3e0a2855736520746865206170706c69636174696f6e29206173202855736529203c3c204d61696e203e3e0a0a55736572202d3e20285374617274290a55736572202d2d3e2028557365290a0a4d7953716c202d2d3e2028557365290a0a40656e64756d6c&quot; /&gt;&lt;/p&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="markdown" /><category term="example" /><category term="plantuml" /><summary type="html">My First PlantUML</summary></entry><entry><title type="html">Quick markdown example</title><link href="http://localhost:4000/markdown/2017/06/10/quick-mardown-example.html" rel="alternate" type="text/html" title="Quick markdown example" /><published>2017-06-10T00:00:00+10:00</published><updated>2017-06-10T00:00:00+10:00</updated><id>http://localhost:4000/markdown/2017/06/10/quick-mardown-example</id><content type="html" xml:base="http://localhost:4000/markdown/2017/06/10/quick-mardown-example.html">&lt;p&gt;Paragraphs are separated by a blank line.&lt;/p&gt;

&lt;p&gt;2nd paragraph. &lt;em&gt;Italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;monospace&lt;/code&gt;. Itemized lists
look like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this one&lt;/li&gt;
  &lt;li&gt;that one&lt;/li&gt;
  &lt;li&gt;the other one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that — not considering the asterisk — the actual text
content starts at 4-columns in.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Block quotes are
written like so.&lt;/p&gt;

  &lt;p&gt;They can span multiple paragraphs,
if you like.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all
in chapters 12–14”). Three dots … will be converted to an ellipsis.
Unicode is supported. ☺&lt;/p&gt;

&lt;h2 id=&quot;an-h2-header&quot;&gt;An h2 header&lt;/h2&gt;

&lt;p&gt;Here’s a numbered list:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;first item&lt;/li&gt;
  &lt;li&gt;second item&lt;/li&gt;
  &lt;li&gt;third item&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here’s a code sample:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Let me re-iterate ...
for i in 1 .. 10 { do-something(i) }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define foobar() {
    print &quot;Welcome to flavor country!&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(which makes copying &amp;amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Quick, count to ten!
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# (but not *too* quick)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;an-h3-header&quot;&gt;An h3 header&lt;/h3&gt;

&lt;p&gt;Now a nested list:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;First, get these ingredients:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;carrots&lt;/li&gt;
      &lt;li&gt;celery&lt;/li&gt;
      &lt;li&gt;lentils&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Boil some water.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dump everything in the pot and follow
this algorithm:&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously on pot handle
wait 10 minutes
goto first step (or shut off burner when done)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Do not bump wooden spoon or it will fall.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).&lt;/p&gt;

&lt;p&gt;Here’s a link to &lt;a href=&quot;http://foo.bar&quot;&gt;a website&lt;/a&gt;, to a &lt;a href=&quot;local-doc.html&quot;&gt;local
doc&lt;/a&gt;, and to a &lt;a href=&quot;#an-h2-header&quot;&gt;section heading in the current
doc&lt;/a&gt;. Here’s a footnote &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Tables can look like this:&lt;/p&gt;

&lt;p&gt;Name           Size  Material      Color
————- —–  ————  ————
All Business      9  leather       brown
Roundabout       10  hemp canvas   natural
Cinderella       11  glass         transparent&lt;/p&gt;

&lt;p&gt;Table: Shoes sizes, materials, and colors.&lt;/p&gt;

&lt;p&gt;(The above is the caption for the table.) Pandoc also supports
multi-line tables:&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Keyword   Text
——–  ———————–
red       Sunsets, apples, and
          other red or reddish
          things.&lt;/p&gt;

&lt;p&gt;green     Leaves, grass, frogs
          and other things it’s
          not easy being.
——–  ———————–&lt;/p&gt;

&lt;p&gt;A horizontal rule follows.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here’s a definition list:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;apples&lt;/dt&gt;
  &lt;dd&gt;Good for making applesauce.&lt;/dd&gt;
  &lt;dt&gt;oranges&lt;/dt&gt;
  &lt;dd&gt;Citrus!&lt;/dd&gt;
  &lt;dt&gt;tomatoes&lt;/dt&gt;
  &lt;dd&gt;There’s no “e” in tomatoe.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Again, text is indented 4 spaces. (Put a blank line between each
term and  its definition to spread things out more.)&lt;/p&gt;

&lt;p&gt;Here’s a “line block” (note how whitespace is honored):&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Line one&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Line too&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Line tree&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;and images can be specified like so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.unexpected-vortices.com/sw/rippledoc/example-image.jpg&quot; alt=&quot;example image&quot; title=&quot;An exemplary image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inline math equation: $\omega = d\phi / dt$. Display
math should get its own line like so:&lt;/p&gt;

\[I = \int \rho R^{2} dV\]

&lt;p&gt;And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Some footnote text. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>GitHub Yeminyi</name></author><category term="markdown" /><category term="markdown" /><category term="example" /><summary type="html">Paragraphs are separated by a blank line.</summary></entry></feed>