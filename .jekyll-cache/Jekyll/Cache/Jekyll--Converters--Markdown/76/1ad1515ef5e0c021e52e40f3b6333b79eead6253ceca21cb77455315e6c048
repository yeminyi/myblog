I"-<h2 id="usage">Usage</h2>

<p><a href="https://github.com/marketplace/actions/jekyll-deploy-action">https://github.com/marketplace/actions/jekyll-deploy-action</a></p>

<p>At First, you should add a github workflow file (e.g. .github/workflows/build-jekyll.yml) in your repositoryâ€™s master branch as below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 
name: Build and Deploy to Github Pages

on:
  push:
    branches:
      - master  # Here source code branch is `master`, it could be other branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Use GitHub Actions' cache to cache dependencies on servers
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Use GitHub Deploy Action to build and deploy to Github
      - uses: jeffreytse/jekyll-deploy-action@v0.1.3
        with:
          provider: 'github'
          token: ${{ secrets.GH_TOKEN }} # It's your Personal Access Token(PAT)
          repository: ''             # Default is current repository
          branch: 'gh-pages'         # Default is gh-pages for github provider
          jekyll_src: './'           # Default is root directory
          jekyll_cfg: '_config.yml'  # Default is _config.yml
          jekyll_baseurl: ''         # Default is using _config.yml
          bundler_ver: '&gt;=0'         # Default is latest bundler version
          cname: ''                  # Default is to not use a cname
          actor: ''                  # Default is the GITHUB_ACTOR
{{ $store.state.user.name }}
</code></pre></div></div>
<p>To schedule a workflow, you can use the POSIX cron syntax in your workflow file. The shortest interval you can run scheduled workflows is once every 5 minutes. For example, this workflow is triggered every hour.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>on:
  schedule:
    - cron:  '0 * * * *'
</code></pre></div></div>
<p>After this, we should provide permissions for this action to push to the gh-pages branch:</p>

<ul>
  <li>Create a  <a href="https://github.com/settings/tokens">Personal Token</a>  with repos permissions and copy the value.</li>
  <li>Go to your repositoryâ€™s Settings and then switch to the Secrets tab.</li>
  <li>Create a token named  <code class="language-plaintext highlighter-rouge">GH_TOKEN</code>  (important) using the value copied.</li>
</ul>

<p>Additionally, if you donâ€™t have the gh-pages branch, you can create it as below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout --orphan gh-pages
git rm -rf .
git commit --allow-empty -m "initial commit"
git push origin gh-pages

</code></pre></div></div>

<h2 id="-tips">ðŸ’¡ Tips</h2>

<p>ðŸ’¡ Tip: The gh-pages branch is only for the site static files and the master branch is for source code.</p>
:ET