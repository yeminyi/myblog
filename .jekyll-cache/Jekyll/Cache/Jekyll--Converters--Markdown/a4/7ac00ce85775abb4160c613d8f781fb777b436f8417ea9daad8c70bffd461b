I"€	<p>Usage
At First, you should add a github workflow file (e.g. .github/workflows/build-jekyll.yml) in your repository‚Äôs master branch as below:</p>

<p>name: Build and Deploy to Github Pages</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>on:
push:
    branches:
    - master  # Here source code branch is `master`, it could be other branch

jobs:
build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Use GitHub Actions' cache to cache dependencies on servers
    - uses: actions/cache@v1
        with:
        path: vendor/bundle
        key: $-gems-$
        restore-keys: |
            $-gems-

    # Use GitHub Deploy Action to build and deploy to Github
    - uses: jeffreytse/jekyll-deploy-action@v0.1.3
        with:
        provider: 'github'
        token: $ # It's your Personal Access Token(PAT)
        repository: ''             # Default is current repository
        branch: 'gh-pages'         # Default is gh-pages for github provider
        jekyll_src: './'           # Default is root directory
        jekyll_cfg: '_config.yml'  # Default is _config.yml
        jekyll_baseurl: ''         # Default is using _config.yml
        bundler_ver: '&gt;=0'         # Default is latest bundler version
        cname: ''                  # Default is to not use a cname
        actor: ''                  # Default is the GITHUB_ACTOR
</code></pre></div></div>

<p>To schedule a workflow, you can use the POSIX cron syntax in your workflow file. The shortest interval you can run scheduled workflows is once every 5 minutes. For example, this workflow is triggered every hour.</p>

<p>on:
  schedule:
    - cron:  ‚Äò0 * * * *‚Äô
After this, we should provide permissions for this action to push to the gh-pages branch:</p>

<p>Create a Personal Token with repos permissions and copy the value.
Go to your repository‚Äôs Settings and then switch to the Secrets tab.
Create a token named GH_TOKEN (important) using the value copied.
In the end, go to your repository‚Äôs Settings and scroll down to the GitHub Pages section, choose the gh-pages branch as your GitHub Pages source.</p>

<p>Additionally, if you don‚Äôt have the gh-pages branch, you can create it as below:</p>

<p>git checkout ‚Äìorphan gh-pages
git rm -rf .
git commit ‚Äìallow-empty -m ‚Äúinitial commit‚Äù
git push origin gh-pages
üí° Tip: The gh-pages branch is only for the site static files and the master branch is for source code.</p>
:ET